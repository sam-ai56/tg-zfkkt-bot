const db = require("./database").sqlite;
const link = require("./link");
const middleware = require("./middleware");

module.exports = {
    main_menu(id){
        var def = [
            [
                {
                    text: "‚öñÔ∏è –ü–æ—Å–∫–∞—Ä–∂–∏—Ç–∏—Å—è",
                    callback_data: "menu:complaint_menu"
                },
                {
                    text: "ü§ì –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è",
                    callback_data: "menu:offer_text",
                },
                {
                    text: "‚ö°Ô∏è –°–°",
                    callback_data: "menu:ss_menu"
                },
            ]
        ];

        def.push([
            {
                text: "üóø –†–æ–∑–∫–ª–∞–¥",
                callback_data: "menu:schedule_menu",
            },
        ]);

        if (middleware.is_owner(id)) {
            def.push([
                {
                    text: "–ú–µ–Ω—é –≤–ª–∞—Å–Ω–∏–∫–∞",
                    callback_data: "menu:owner_menu",
                },
                {
                    text: "–ú–µ–Ω—é –∞–¥–º—ñ–Ω–∞",
                    callback_data: "menu:admin_menu",
                }
            ]);
        }

        if (middleware.is_admin(id) && !middleware.is_owner(id)) {
            def.push([
                {
                    text: "–ú–µ–Ω—é –∞–¥–º—ñ–Ω–∞",
                    callback_data: "menu:admin_menu",
                }
            ]);
        }

        return def;
    },
    owner_menu() {
        return [
            [
                {
                    text: "–î–æ–¥–∞—Ç–∏ –∞–¥–º—ñ–Ω–∞",
                    callback_data: link.gen_link(link.to, "add_admin")
                },
                {
                    text: "–°–ø–∏—Å–æ–∫ –∞–¥–º—ñ–Ω—ñ–≤",
                    callback_data: link.gen_link(link.to, "choose_admin")
                }
            ],
            [
                {
                    text: "–ù–∞–∑–∞–¥",
                    callback_data: link.gen_link(link.to, "menu")
                }
            ]
        ];
    },
    schedule_menu(id) {
        var def = [[], []];

        var day = new Date().getDay();

        if (middleware.has_group(id)){
            def[0].push({
                text: "üòÆ –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Å–≤—ñ–π —Ä–æ–∑–∫–ª–∞–¥",
                callback_data: link.gen_link(link.to, `show_schedule:${day}`)
            });
            def[0].push({
                text: "ü§î –†–æ–∑–∫–ª–∞–¥ —ñ–Ω—à–æ—ó –≥—Ä—É–ø–∏",
                callback_data: link.gen_link(link.to, `get_group_schedule:0`)
            });
        }else{
            def[0].push({
                text: "üòÆ –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑–∫–ª–∞–¥",
                callback_data: link.gen_link(link.to, `get_group_schedule:0`)
            });
        }
        
        def[1].push({
            text: "üîî –†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤",
            callback_data: link.gen_link(link.to, "show_bells_schedule")
        });

        if (middleware.has_distribution(id)){
            def[1].push({
                text: "ü•π –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É",
                callback_data: link.gen_link(link.to, "get_group_distribution:0")
            });
        }else{
            def[1].push({
                text: "üôÑ –í—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏",
                callback_data: link.gen_link(link.to, "unsubscribe_distribution")
            });
            // def[1].push({
            //     text: "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è",
            //     callback_data: "menu:settings_schedule"
            // });
        }

        def.push([{
            text: "–ù–∞–∑–∞–¥",
            callback_data: link.gen_link(link.to, "menu")
        }]);

        return def;
    },
    complaint_menu() {
        return [
            [
                {
                    text: "üòü –°–∫–∞—Ä–≥–∞ –Ω–∞ –≤–∏–∫–ª–∞–¥–∞—á–∞",
                    callback_data: link.gen_link(link.to, `complaint_teacher_menu:0`)
                },
                {
                    text: "ü´£ –°–∫–∞—Ä–≥–∞ –Ω–∞ –°–°",
                    callback_data: link.gen_link(link.to, "complaint_ss_text")
                }
            ],
            [
                {
                    text: "üòê –°–∫–∞—Ä–≥–∞ –Ω–∞ –±–æ—Ç–∞",
                    callback_data: link.gen_link(link.to, "complaint_bot_text")
                },
                {
                    text: "üìù –ü–æ–º–∏–ª–∫–∞ —É —Ä–æ–∑–∫–ª–∞–¥—ñ",
                    callback_data: link.gen_link(link.to, "schedule_mistake_text")
                }
            ],
            [
                {
                    text: "–ù–∞–∑–∞–¥",
                    callback_data: link.gen_link(link.to, "menu")
                }
            ]
        ]
    },
    ss_menu() {
        return [
            [
                {
                    text: "ü§ó –ó–∞–ø–∏—Ç –Ω–∞ –≤—Å—Ç—É–ø –¥–æ –°–°",
                    web_app: {
                        url: "https://docs.google.com/forms/d/e/1FAIpQLSc0UwAcRtUUcDQj7_gN9eEVz5-sBM6FpWLFfO9lEUPMjSLz8w/viewform"
                    }
                },
                {
                    text: "ü§î –©–æ —Ç–∞–∫–µ –°–°?",
                    callback_data: link.gen_link(link.to, "ss_about")
                }
            ],
            [
                {
                    text: "üí≠ –ù–∞—à—ñ —Å–æ—Ü. –º–µ—Ä–µ–∂—ñ",
                    callback_data: link.gen_link(link.to, "ss_media")
                },
                {
                    text: "üêó PUMBA!",
                    callback_data: link.gen_link(link.to, "pumba_info")
                }
            ],
            [
                {
                    text: "–ù–∞–∑–∞–¥",
                    callback_data: link.gen_link(link.to, "menu")
                }
            ]
        ]
    }
}